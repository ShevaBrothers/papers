package ru.ifmo.ctd.ngp.demo.testgen.flows.experiments.generators

import ru.ifmo.ctd.ngp.demo.testgen.flows.EdgeRec

/**
 * A common trait for all test generators in this package.
 * @param name the name of the generator.
 */
abstract class TestGenerator(val name: String) {
  /**
   * Generates a test with the given number of vertices, edges and maximum capacity.
   * Note that the number of edges may not be the same in the result.
   *
   * @param vertices the required number of vertices.
   * @param edges the required number of edges (may be ignored).
   * @param maxCapacity the maximum capacity of an edge.
   * @return the test.
   */
  def generate(vertices: Int, edges: Int, maxCapacity: Int): TestGenerator.Result
}

object TestGenerator {
  /**
   * The maximum flow test as generated by `TestGenerator`.
   * @param edges the edges of the graph.
   * @param src the source.
   * @param trg the target (sink).
   */
  case class Result(edges: Iterable[EdgeRec], src: Int, trg: Int)
}
